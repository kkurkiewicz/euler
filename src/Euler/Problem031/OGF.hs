{- |
Module      :  Euler.Problem031.OGF
Description :  Problem 31 - Coin sums
Copyright   :  (c) Kamil Kurkiewicz
License     :  NONE

Maintainer  :  Kamil Kurkiewicz <k-kurkiewicz@outlook.com>
Stability   :  provisional
Portability :  portable

Fast implementation of the Pólya \(P_n\) operator for denoting total
number of all ways of paying the amount of \(n\) cents with eight
kinds of British standard coins*.

*Standard-issue 1-, 2-, 5-, 10- 20-, 50-, 100- and 200-cent coins

Sources used and further reading:

    1. Graham RL, Knuth DE, Patashnik O. Concrete Mathematics. A Foundation for Computer Science.
       4th Polish ed. Chrząstowski P, Czumaj A, Gąsieniec L, Raczunas M, translators.
       Warsaw: Wydawnictwo Naukowe PWN [Polish Scientific Publishers PWN]; 2012.
       Rozdział 7, Funkcje tworzące [Chapter 7, Generating Functions]; p. 356-422.
    2. Pólya G. On Picture-Writing.
       Am Math Mon. 1956 Dec;63(10):689-697.
       Available from: <www.jstor.org/stable/2309555>.
  ? 3. Wroński M. Funkcje tworzące. [unpublished lecture notes]. MD2: Matematyka dyskretna II.
       Warsaw: Military University of Technology; lecture given in 2015.
    
  ? 4. Euler problems/31 to 40 [Online]. [2014 Sep 19?] [cited 2019 Dec 2].
       Available from: <https://wiki.haskell.org/Euler_problems>.
    5. Jia YB. Polynomial Multiplication and Fast Fourier Transform [published lecture notes].
       Com S 477/577: Problem Solving Techniques for Applied Computer Science.
       Ames: Iowa State University; lecture given 2019 Sep 26.

-}
module Euler.Problem031.OGF where


import qualified CLI    -- Euler.CLI?
import           Control.Monad
import qualified Data.Maybe as Maybe
import qualified Euler.Math.Binom


------------------------------------------------------------


-- |Specifies the module name to be used in error messages
moduleName :: String
moduleName = "Euler.Problem031.OGF"


-- |\(A(z)\) [1]
-- 
-- TODO Prove the list is always going to be symmetrical
-- 
lstA :: [Integer]
lstA = [
    1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 11, 12, 15, 16, 19, 22, 25, 28, 31, 34, 41,
    44, 51, 54, 61, 68, 75, 82, 89, 96, 109, 116, 129, 136, 149, 162, 175, 188,
    201, 214, 236, 249, 271, 284, 306, 328, 350, 372, 394, 416, 451, 473, 508,
    530, 565, 600, 635, 670, 705, 740, 793, 828, 881, 916, 969, 1022, 1075,
    1128, 1181, 1234, 1311, 1364, 1441, 1494, 1571, 1648, 1725, 1802, 1879,
    1956, 2064, 2141, 2249, 2326, 2434, 2542, 2650, 2758, 2866, 2974, 3121,
    3229, 3376, 3484, 3631, 3778, 3925, 4072, 4219, 4366, 4563, 4710, 4907,
    5054, 5251, 5448, 5645, 5842, 6039, 6236, 6495, 6692, 6951, 7148, 7407,
    7666, 7925, 8184, 8443, 8702, 9038, 9297, 9633, 9892, 10228, 10564, 10900,
    11236, 11572, 11908, 12337, 12673, 13102, 13438, 13867, 14296, 14725, 15154,
    15583, 16012, 16553, 16982, 17523, 17952, 18493, 19034, 19575, 20116, 20657,
    21198, 21873, 22414, 23089, 23630, 24305, 24980, 25655, 26330, 27005, 27680,
    28514, 29189, 30023, 30698, 31532, 32366, 33200, 34034, 34868, 35702, 36723,
    37557, 38578, 39412, 40433, 41454, 42475, 43496, 44517, 45538, 46777, 47798,
    49037, 50058, 51297, 52536, 53775, 55014, 56253, 57492, 58983, 60222, 61713,
    62952, 64443, 65934, 67425, 68916, 70407, 71898, 73674, 75165, 76941, 78432,
    80208, 81984, 83760, 85536, 87312, 89088, 91185, 92961, 95058, 96834, 98931,
    101028, 103125, 105222, 107319, 109416, 111869, 113966, 116419, 118516,
    120969, 123422, 125875, 128328, 130781, 133234, 136081, 138534, 141381,
    143834, 146681, 149528, 152375, 155222, 158069, 160916, 164194, 167041,
    170319, 173166, 176444, 179722, 183000, 186278, 189556, 192834, 196579,
    199857, 203602, 206880, 210625, 214370, 218115, 221860, 225605, 229350,
    233597, 237342, 241589, 245334, 249581, 253828, 258075, 262322, 266569,
    270816, 275599, 279846, 284629, 288876, 293659, 298442, 303225, 308008,
    312791, 317574, 322926, 327709, 333061, 337844, 343196, 348548, 353900,
    359252, 364604, 369956, 375909, 381261, 387214, 392566, 398519, 404472,
    410425, 416378, 422331, 428284, 434859, 440812, 447387, 453340, 459915,
    466490, 473065, 479640, 486215, 492790, 500007, 506582, 513799, 520374,
    527591, 534808, 542025, 549242, 556459, 563676, 571544, 578761, 586629,
    593846, 601714, 609582, 617450, 625318, 633186, 641054, 649581, 657449,
    665976, 673844, 682371, 690898, 699425, 707952, 716479, 725006, 734189,
    742716, 751899, 760426, 769609, 778792, 787975, 797158, 806341, 815524,
    825349, 834532, 844357, 853540, 863365, 873190, 883015, 892840, 902665,
    912490, 922932, 932757, 943199, 953024, 963466, 973908, 984350, 994792,
    1005234, 1015676, 1026699, 1037141, 1048164, 1058606, 1069629, 1080652,
    1091675, 1102698, 1113721, 1124744, 1136301, 1147324, 1158881, 1169904,
    1181461, 1193018, 1204575, 1216132, 1227689, 1239246, 1251279, 1262836,
    1274869, 1286426, 1298459, 1310492, 1322525, 1334558, 1346591, 1358624,
    1371069, 1383102, 1395547, 1407580, 1420025, 1432470, 1444915, 1457360,
    1469805, 1482250, 1495032, 1507477, 1520259, 1532704, 1545486, 1558268,
    1571050, 1583832, 1596614, 1609396, 1622434, 1635216, 1648254, 1661036,
    1674074, 1687112, 1700150, 1713188, 1726226, 1739264, 1752466, 1765504,
    1778706, 1791744, 1804946, 1818148, 1831350, 1844552, 1857754, 1870956,
    1884224, 1897426, 1910694, 1923896, 1937164, 1950432, 1963700, 1976968,
    1990236, 2003504, 2016734, 2030002, 2043232, 2056500, 2069730, 2082960,
    2096190, 2109420, 2122650, 2135880, 2148962, 2162192, 2175274, 2188504,
    2201586, 2214668, 2227750, 2240832, 2253914, 2266996, 2279814, 2292896,
    2305714, 2318796, 2331614, 2344432, 2357250, 2370068, 2382886, 2395704,
    2408136, 2420954, 2433386, 2446204, 2458636, 2471068, 2483500, 2495932,
    2508364, 2520796, 2532714, 2545146, 2557064, 2569496, 2581414, 2593332,
    2605250, 2617168, 2629086, 2641004, 2652294, 2664212, 2675502, 2687420,
    2698710, 2710000, 2721290, 2732580, 2743870, 2755160, 2765702, 2776992,
    2787534, 2798824, 2809366, 2819908, 2830450, 2840992, 2851534, 2862076,
    2871764, 2882306, 2891994, 2902536, 2912224, 2921912, 2931600, 2941288,
    2950976, 2960664, 2969386, 2979074, 2987796, 2997484, 3006206, 3014928,
    3023650, 3032372, 3041094, 3049816, 3057474, 3066196, 3073854, 3082576,
    3090234, 3097892, 3105550, 3113208, 3120866, 3128524, 3135034, 3142692,
    3149202, 3156860, 3163370, 3169880, 3176390, 3182900, 3189410, 3195920,
    3201212, 3207722, 3213014, 3219524, 3224816, 3230108, 3235400, 3240692,
    3245984, 3251276, 3255294, 3260586, 3264604, 3269896, 3273914, 3277932,
    3281950, 3285968, 3289986, 3294004, 3296706, 3300724, 3303426, 3307444,
    3310146, 3312848, 3315550, 3318252, 3320954, 3323656, 3325014, 3327716,
    3329074, 3331776, 3333134, 3334492, 3335850, 3337208, 3338566, 3339924,
    3339924, 3341282, 3341282, 3342640, 3342640, 3342640, 3342640, 3342640,
    3342640, 3342640, 3341282, 3341282, 3339924, 3339924, 3338566, 3337208,
    3335850, 3334492, 3333134, 3331776, 3329074, 3327716, 3325014, 3323656,
    3320954, 3318252, 3315550, 3312848, 3310146, 3307444, 3303426, 3300724,
    3296706, 3294004, 3289986, 3285968, 3281950, 3277932, 3273914, 3269896,
    3264604, 3260586, 3255294, 3251276, 3245984, 3240692, 3235400, 3230108,
    3224816, 3219524, 3213014, 3207722, 3201212, 3195920, 3189410, 3182900,
    3176390, 3169880, 3163370, 3156860, 3149202, 3142692, 3135034, 3128524,
    3120866, 3113208, 3105550, 3097892, 3090234, 3082576, 3073854, 3066196,
    3057474, 3049816, 3041094, 3032372, 3023650, 3014928, 3006206, 2997484,
    2987796, 2979074, 2969386, 2960664, 2950976, 2941288, 2931600, 2921912,
    2912224, 2902536, 2891994, 2882306, 2871764, 2862076, 2851534, 2840992,
    2830450, 2819908, 2809366, 2798824, 2787534, 2776992, 2765702, 2755160,
    2743870, 2732580, 2721290, 2710000, 2698710, 2687420, 2675502, 2664212,
    2652294, 2641004, 2629086, 2617168, 2605250, 2593332, 2581414, 2569496,
    2557064, 2545146, 2532714, 2520796, 2508364, 2495932, 2483500, 2471068,
    2458636, 2446204, 2433386, 2420954, 2408136, 2395704, 2382886, 2370068,
    2357250, 2344432, 2331614, 2318796, 2305714, 2292896, 2279814, 2266996,
    2253914, 2240832, 2227750, 2214668, 2201586, 2188504, 2175274, 2162192,
    2148962, 2135880, 2122650, 2109420, 2096190, 2082960, 2069730, 2056500,
    2043232, 2030002, 2016734, 2003504, 1990236, 1976968, 1963700, 1950432,
    1937164, 1923896, 1910694, 1897426, 1884224, 1870956, 1857754, 1844552,
    1831350, 1818148, 1804946, 1791744, 1778706, 1765504, 1752466, 1739264,
    1726226, 1713188, 1700150, 1687112, 1674074, 1661036, 1648254, 1635216,
    1622434, 1609396, 1596614, 1583832, 1571050, 1558268, 1545486, 1532704,
    1520259, 1507477, 1495032, 1482250, 1469805, 1457360, 1444915, 1432470,
    1420025, 1407580, 1395547, 1383102, 1371069, 1358624, 1346591, 1334558,
    1322525, 1310492, 1298459, 1286426, 1274869, 1262836, 1251279, 1239246,
    1227689, 1216132, 1204575, 1193018, 1181461, 1169904, 1158881, 1147324,
    1136301, 1124744, 1113721, 1102698, 1091675, 1080652, 1069629, 1058606,
    1048164, 1037141, 1026699, 1015676, 1005234, 994792, 984350, 973908, 963466,
    953024, 943199, 932757, 922932, 912490, 902665, 892840, 883015, 873190,
    863365, 853540, 844357, 834532, 825349, 815524, 806341, 797158, 787975,
    778792, 769609, 760426, 751899, 742716, 734189, 725006, 716479, 707952,
    699425, 690898, 682371, 673844, 665976, 657449, 649581, 641054, 633186,
    625318, 617450, 609582, 601714, 593846, 586629, 578761, 571544, 563676,
    556459, 549242, 542025, 534808, 527591, 520374, 513799, 506582, 500007,
    492790, 486215, 479640, 473065, 466490, 459915, 453340, 447387, 440812,
    434859, 428284, 422331, 416378, 410425, 404472, 398519, 392566, 387214,
    381261, 375909, 369956, 364604, 359252, 353900, 348548, 343196, 337844,
    333061, 327709, 322926, 317574, 312791, 308008, 303225, 298442, 293659,
    288876, 284629, 279846, 275599, 270816, 266569, 262322, 258075, 253828,
    249581, 245334, 241589, 237342, 233597, 229350, 225605, 221860, 218115,
    214370, 210625, 206880, 203602, 199857, 196579, 192834, 189556, 186278,
    183000, 179722, 176444, 173166, 170319, 167041, 164194, 160916, 158069,
    155222, 152375, 149528, 146681, 143834, 141381, 138534, 136081, 133234,
    130781, 128328, 125875, 123422, 120969, 118516, 116419, 113966, 111869,
    109416, 107319, 105222, 103125, 101028, 98931, 96834, 95058, 92961, 91185,
    89088, 87312, 85536, 83760, 81984, 80208, 78432, 76941, 75165, 73674, 71898,
    70407, 68916, 67425, 65934, 64443, 62952, 61713, 60222, 58983, 57492, 56253,
    55014, 53775, 52536, 51297, 50058, 49037, 47798, 46777, 45538, 44517, 43496,
    42475, 41454, 40433, 39412, 38578, 37557, 36723, 35702, 34868, 34034, 33200,
    32366, 31532, 30698, 30023, 29189, 28514, 27680, 27005, 26330, 25655, 24980,
    24305, 23630, 23089, 22414, 21873, 21198, 20657, 20116, 19575, 19034, 18493,
    17952, 17523, 16982, 16553, 16012, 15583, 15154, 14725, 14296, 13867, 13438,
    13102, 12673, 12337, 11908, 11572, 11236, 10900, 10564, 10228, 9892, 9633,
    9297, 9038, 8702, 8443, 8184, 7925, 7666, 7407, 7148, 6951, 6692, 6495,
    6236, 6039, 5842, 5645, 5448, 5251, 5054, 4907, 4710, 4563, 4366, 4219,
    4072, 3925, 3778, 3631, 3484, 3376, 3229, 3121, 2974, 2866, 2758, 2650,
    2542, 2434, 2326, 2249, 2141, 2064, 1956, 1879, 1802, 1725, 1648, 1571,
    1494, 1441, 1364, 1311, 1234, 1181, 1128, 1075, 1022, 969, 916, 881, 828,
    793, 740, 705, 670, 635, 600, 565, 530, 508, 473, 451, 416, 394, 372, 350,
    328, 306, 284, 271, 249, 236, 214, 201, 188, 175, 162, 149, 136, 129, 116,
    109, 96, 89, 82, 75, 68, 61, 54, 51, 44, 41, 34, 31, 28, 25, 22, 19, 16, 15,
    12, 11, 8, 7, 6, 5, 4, 3, 2, 2, 1, 1
 ]


-- |\(P_n\) [2]
-- 
-- SEE 'Euler.Math.Binom.choose'
-- 
p :: Integer -> Integer
p n = p' choose n
  where
    choose n k = Maybe.fromMaybe 0 (Euler.Math.Binom.choose n k)


-- |Like 'p', but allows the user to apply own function for computing
-- Newton's coefficients
p' :: (Integer -> Integer -> Integer) -> Integer -> Integer
p' fnChoose n =
        sum [fnChoose (q + 7 - l) 7 *
                let
                    t = 200*l + r
                in
                    if t <= 1212
                        then lstA !! fromInteger t
                        else 0
                                | l <- [0 .. 6] ]
      where
        (q, r) = divMod n 200


-- |Adds two polynomials represented as dense lists of coefficients
add :: [Integer] -> [Integer] -> [Integer]
add []     ys     = ys
add xs     []     = xs
add (x:xs) (y:ys) = x+y : add xs ys


-- |Multiplication
multiply :: [Integer] -> [Integer] -> [Integer]
multiply []     _  = []
multiply _      [] = []
multiply (x:xs) ys = add (map (*x) ys) (0 : multiply xs ys)


-- |Prints the answer to the original Project Euler question
projecteuler :: IO ()
projecteuler = print $ p 200


-- |Solves the multi-test, large-N modification of the problem shown at
-- <https://www.hackerrank.com/contests/projecteuler/challenges/euler031/problem>
hackerrank :: IO ()
hackerrank = do
    -- Number of test cases
    _T <- readLn
    
    -- Test loop
    replicateM_ _T $ do
        _N <- readLn
        print $ p _N `mod` 1000000007    -- Very slow, but at this
                                         -- point we just don't care


-- |Point of entry
main :: IO ()
main = CLI.cliMain projecteuler (Just hackerrank) Nothing moduleName

